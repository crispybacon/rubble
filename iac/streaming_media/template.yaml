---
AWSTemplateFormatVersion: '2010-09-09'
Description: Media Services for Live Streaming and VOD

Parameters:
  StaticWebsiteStackName:
    Type: String
    Description: Name of the static website stack to integrate with
    
  LiveInputType:
    Type: String
    Default: RTMP_PUSH
    AllowedValues:
      - RTMP_PUSH
      - RTP_PUSH
      - URL_PULL
    Description: Type of input for live streaming
  
  LiveInputWhitelistCidr:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR block to whitelist for live streaming input
    
  OrganizationTag:
    Type: String
    Description: Organization tag for resources
    Default: "flatstone services"
    
  BusinessUnitTag:
    Type: String
    Description: Business unit tag for resources
    Default: "marketing"
    
  EnvironmentTag:
    Type: String
    Description: Environment tag for resources
    Default: "dev"
    
Resources:
  # MediaLive Channel for live streaming
  MediaLiveChannel:
    Type: AWS::MediaLive::Channel
    Properties:
      ChannelClass: SINGLE_PIPELINE
      Name: !Sub "${AWS::StackName}-channel"
      InputAttachments:
        - InputId: !Ref MediaLiveInput
          InputAttachmentName: LiveInput
      Destinations:
        - Id: "MediaPackageDestination"
          MediaPackageSettings:
            - ChannelId: !Ref MediaPackageChannel
      EncoderSettings:
        AudioDescriptions:
          - AudioSelectorName: "Default"
            Name: "audio_1"
            CodecSettings:
              AacSettings:
                Profile: LC
                RateControlMode: CBR
                Bitrate: 192000
        VideoDescriptions:
          - Name: "video_1"
            RespondToAfd: "NONE"
            ScalingBehavior: "DEFAULT"
            Width: 1920
            Height: 1080
            CodecSettings:
              H264Settings:
                Profile: MAIN
                RateControlMode: CBR
                Bitrate: 5000000
                FramerateControl: "SPECIFIED"
                FramerateNumerator: 30
                FramerateDenominator: 1
                ParControl: "SPECIFIED"
                ParNumerator: 1
                ParDenominator: 1
        TimecodeConfig:
          Source: "EMBEDDED"
        OutputGroups:
          - Name: "MediaPackage_Group"
            OutputGroupSettings:
              MediaPackageGroupSettings:
                Destination:
                  DestinationRefId: "MediaPackageDestination"
            Outputs:
              - AudioDescriptionNames:
                  - "audio_1"
                VideoDescriptionName: "video_1"
                OutputName: "MediaPackage_Output"
                OutputSettings:
                  MediaPackageOutputSettings: {}
      Tags:
        Organization: !Ref OrganizationTag
        BusinessUnit: !Ref BusinessUnitTag
        Environment: !Ref EnvironmentTag
                
  # MediaLive Input for receiving live streams
  MediaLiveInput:
    Type: AWS::MediaLive::Input
    Properties:
      Type: !Ref LiveInputType
      InputSecurityGroups:
        - !Ref MediaLiveInputSecurityGroup
      Destinations:
        - StreamName: !Sub "${AWS::StackName}/live"
      Tags:
        Organization: !Ref OrganizationTag
        BusinessUnit: !Ref BusinessUnitTag
        Environment: !Ref EnvironmentTag
        
  # Security group for MediaLive Input
  MediaLiveInputSecurityGroup:
    Type: AWS::MediaLive::InputSecurityGroup
    Properties:
      WhitelistRules:
        - Cidr: !Ref LiveInputWhitelistCidr
      Tags:
        Organization: !Ref OrganizationTag
        BusinessUnit: !Ref BusinessUnitTag
        Environment: !Ref EnvironmentTag
          
  # MediaPackage Channel for packaging live content
  MediaPackageChannel:
    Type: AWS::MediaPackage::Channel
    Properties:
      Id: !Sub "${AWS::StackName}-channel"
      Description: Channel for live streaming
      
  # MediaPackage Origin Endpoint for HLS
  MediaPackageHlsEndpoint:
    Type: AWS::MediaPackage::OriginEndpoint
    Properties:
      ChannelId: !Ref MediaPackageChannel
      Id: !Sub "${AWS::StackName}-hls-endpoint"
      HlsPackage:
        SegmentDurationSeconds: 6
        PlaylistWindowSeconds: 60

  # MediaPackage Origin Endpoint for DASH
  MediaPackageDashEndpoint:
    Type: AWS::MediaPackage::OriginEndpoint
    Properties:
      ChannelId: !Ref MediaPackageChannel
      Id: !Sub "${AWS::StackName}-dash-endpoint"
      DashPackage:
        SegmentDurationSeconds: 6
        ManifestWindowSeconds: 60

  # S3 Bucket for VOD content
  VodContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
            AllowedOrigins: ['*']
            MaxAge: 3600
      Tags:
        - Key: Organization
          Value: !Ref OrganizationTag
        - Key: BusinessUnit
          Value: !Ref BusinessUnitTag
        - Key: Environment
          Value: !Ref EnvironmentTag
            
  # CloudFront Origin Access Identity for VOD bucket
  VodOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "OAI for ${AWS::StackName} VOD content"
        
  # Update CloudFront Distribution to include media endpoints
  CloudFrontMediaBehavior:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Join ["", [!Ref MediaPackageChannel, ".mediapackage.", !Ref "AWS::Region", ".amazonaws.com"]]
            Id: HLSOrigin
            OriginPath: !Sub "/out/v1/${AWS::StackName}-hls-endpoint"
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - DomainName: !Join ["", [!Ref MediaPackageChannel, ".mediapackage.", !Ref "AWS::Region", ".amazonaws.com"]]
            Id: DASHOrigin
            OriginPath: !Sub "/out/v1/${AWS::StackName}-dash-endpoint"
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - DomainName: !Sub "${VodContentBucket}.s3.amazonaws.com"
            Id: VODOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${VodOriginAccessIdentity}"
        CacheBehaviors:
          - PathPattern: /live/*
            TargetOriginId: HLSOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods: [GET, HEAD, OPTIONS]
            CachedMethods: [GET, HEAD]
            ForwardedValues:
              QueryString: true
          - PathPattern: /vod/*
            TargetOriginId: VODOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods: [GET, HEAD, OPTIONS]
            CachedMethods: [GET, HEAD]
            ForwardedValues:
              QueryString: true
        DefaultCacheBehavior:
          TargetOriginId: VODOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD, OPTIONS]
          CachedMethods: [GET, HEAD]
          ForwardedValues:
            QueryString: true
        Enabled: true
      Tags:
        - Key: Organization
          Value: !Ref OrganizationTag
        - Key: BusinessUnit
          Value: !Ref BusinessUnitTag
        - Key: Environment
          Value: !Ref EnvironmentTag

Outputs:
  MediaLiveInputUrl:
    Description: URL for pushing live streams to MediaLive
    Value: !GetAtt MediaLiveInput.Destinations
    
  HlsEndpointUrl:
    Description: HLS endpoint URL for live streaming
    Value: !GetAtt MediaPackageHlsEndpoint.Url
    
  DashEndpointUrl:
    Description: DASH endpoint URL for live streaming
    Value: !GetAtt MediaPackageDashEndpoint.Url
    
  VodBucketName:
    Description: S3 bucket for VOD content
    Value: !Ref VodContentBucket