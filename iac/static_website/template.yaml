---
Parameters:
  AwsRegion:
    Type: String
    Description: AWS Region for deployment
    Default: us-east-1
  
  BucketNamePrefix:
    Type: String
    Description: Prefix for the S3 bucket name
    Default: flatstone-solutions
    
  OriginShieldRegion:
    Type: String
    Description: Region for CloudFront Origin Shield
    Default: us-east-1
    
  OrganizationTag:
    Type: String
    Description: Organization tag value
    Default: "flatstone services"
    
  BusinessUnitTag:
    Type: String
    Description: Business unit tag value
    Default: "marketing"
    
  EnvironmentTag:
    Type: String
    Description: Environment tag value
    Default: "dev"
    
Metadata:
  AWSToolsMetrics:
    IaC_Generator: "arn:aws:cloudformation:us-east-1:851002115632:generatedTemplate/3b1cbe7b-0762-44af-9389-1fb001c49bdd"

Conditions:
  # CloudFront WAF can only be created in us-east-1
  # This condition checks if we're deploying in us-east-1
  IsUsEast1Region: !Equals [!Ref AwsRegion, "us-east-1"]

Resources:
  LogsLogStreamCloudFrontE1QQL1YZZEFP31:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogStream"
    DeletionPolicy: "Delete"
    Properties:
      LogStreamName: "CloudFront_E1QQL1YZZEFP31"
      LogGroupName:
        Ref: "LogsLogGroupFlatstonesolutions"
    # Note: LogStream doesn't support tags directly

  CloudFrontDistribution:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::Distribution"
    DeletionPolicy: "Delete"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: true
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: ""
        Origins:
        - ConnectionTimeout: 10
          OriginAccessControlId:
            Ref: "CloudFrontOriginAccessControl"
          ConnectionAttempts: 3
          OriginCustomHeaders: []
          DomainName:
            Fn::GetAtt:
            - "S3BucketFlatstonesolutionsuseast1"
            - "RegionalDomainName"
          OriginShield:
            Enabled: true
            OriginShieldRegion: 
              Ref: "OriginShieldRegion"
          S3OriginConfig:
            OriginAccessIdentity: ""
          OriginPath: "/static_website/index.html"
          Id: 
            Fn::Sub: "${BucketNamePrefix}-${AwsRegion}.s3.${AwsRegion}.amazonaws.com"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1"
          CloudFrontDefaultCertificate: true
        PriceClass: "PriceClass_100"
        DefaultCacheBehavior:
          Compress: true
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: 
            Fn::Sub: "${BucketNamePrefix}-${AwsRegion}.s3.${AwsRegion}.amazonaws.com"
          ViewerProtocolPolicy: "allow-all"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          CachePolicyId:
            Ref: "CloudFrontCachePolicy"
        Staging: false
        CustomErrorResponses: []
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases: []
        IPV6Enabled: true
        WebACLId: !If 
          - IsUsEast1Region
          - !GetAtt WAFv2WebACLCLOUDFRONT.Arn
          - !Ref AWS::NoValue
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"
        CacheBehaviors: []
      Tags:
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "business_unit"
          Value: !Ref BusinessUnitTag
        - Key: "environment"
          Value: !Ref EnvironmentTag

  S3BucketFlatstonesolutionsuseast1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Delete"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: 
        Fn::Sub: "${BucketNamePrefix}-${AwsRegion}"
      VersioningConfiguration:
        Status: "Enabled"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      Tags:
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "business_unit"
          Value: !Ref BusinessUnitTag
        - Key: "environment"
          Value: !Ref EnvironmentTag
        
  S3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: 
        Ref: "S3BucketFlatstonesolutionsuseast1"
      PolicyDocument:
        Version: "2008-10-17"
        Id: "PolicyForCloudFrontPrivateContent"
        Statement:
          - Sid: "AllowCloudFrontServicePrincipal"
            Effect: "Allow"
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "s3:GetObject"
            Resource: 
              Fn::Sub: "arn:aws:s3:::${BucketNamePrefix}-${AwsRegion}/*"
            Condition:
              StringLike:
                AWS:SourceArn: 
                  Fn::Sub: "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"
    # Note: BucketPolicy doesn't support tags directly

  WAFv2WebACLCLOUDFRONT:
    # WAFv2 WebACL with CLOUDFRONT scope can only be created in us-east-1
    # This resource will only be created when deploying in us-east-1
    Condition: IsUsEast1Region
    UpdateReplacePolicy: "Retain"
    Type: "AWS::WAFv2::WebACL"
    DeletionPolicy: "Delete"
    Properties:
      Description: "CloudFront WAF WebACL (only available in us-east-1)"
      DefaultAction:
        Allow: {}
      Scope: "CLOUDFRONT"
      Rules:
      - OverrideAction:
          None: {}
        RuleLabels: []
        VisibilityConfig:
          SampledRequestsEnabled: true
          MetricName: "AWS-AWSManagedRulesAmazonIpReputationList"
          CloudWatchMetricsEnabled: true
        Priority: 0
        Statement:
          ManagedRuleGroupStatement:
            ManagedRuleGroupConfigs: []
            VendorName: "AWS"
            RuleActionOverrides: []
            ExcludedRules: []
            Name: "AWSManagedRulesAmazonIpReputationList"
        Name: "AWS-AWSManagedRulesAmazonIpReputationList"
      - OverrideAction:
          None: {}
        RuleLabels: []
        VisibilityConfig:
          SampledRequestsEnabled: true
          MetricName: "AWS-AWSManagedRulesCommonRuleSet"
          CloudWatchMetricsEnabled: true
        Priority: 1
        Statement:
          ManagedRuleGroupStatement:
            ManagedRuleGroupConfigs: []
            VendorName: "AWS"
            RuleActionOverrides: []
            ExcludedRules: []
            Name: "AWSManagedRulesCommonRuleSet"
        Name: "AWS-AWSManagedRulesCommonRuleSet"
      - OverrideAction:
          None: {}
        RuleLabels: []
        VisibilityConfig:
          SampledRequestsEnabled: true
          MetricName: "AWS-AWSManagedRulesKnownBadInputsRuleSet"
          CloudWatchMetricsEnabled: true
        Priority: 2
        Statement:
          ManagedRuleGroupStatement:
            ManagedRuleGroupConfigs: []
            VendorName: "AWS"
            RuleActionOverrides: []
            ExcludedRules: []
            Name: "AWSManagedRulesKnownBadInputsRuleSet"
        Name: "AWS-AWSManagedRulesKnownBadInputsRuleSet"
      VisibilityConfig:
        SampledRequestsEnabled: true
        MetricName: "CreatedByCloudFront-d5158f38"
        CloudWatchMetricsEnabled: true
      Name: !Sub "CreatedByCloudFront-${AWS::StackName}"
      Tags:
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "business_unit"
          Value: !Ref BusinessUnitTag
        - Key: "environment"
          Value: !Ref EnvironmentTag

  CloudFrontOriginAccessControl:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::OriginAccessControl"
    DeletionPolicy: "Delete"
    Properties:
      OriginAccessControlConfig:
        SigningBehavior: "always"
        Description: "Flatstone Resume Hosting Application"
        SigningProtocol: "sigv4"
        OriginAccessControlOriginType: "s3"
        Name:
          Fn::Sub: "${BucketNamePrefix}-${AwsRegion}.s3.${AwsRegion}.amazonaws.com"
    # Note: OriginAccessControl doesn't support tags directly

  CloudFrontCachePolicy:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Delete"
    Properties:
      CachePolicyConfig:
        Comment: "Policy with caching enabled. Supports Gzip and Brotli compression."
        MinTTL: 1
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "none"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 86400
        Name: "Custom-CachingOptimized"
    # Note: CachePolicy doesn't support tags directly

  LogsLogGroupFlatstonesolutions:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: "Delete"
    Properties:
      FieldIndexPolicies: []
      LogGroupClass: "INFREQUENT_ACCESS"
      RetentionInDays: 365
      LogGroupName: "flatstone_solutions"
      Tags:
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "business_unit"
          Value: !Ref BusinessUnitTag
        - Key: "environment"
          Value: !Ref EnvironmentTag
      DataProtectionPolicy: {}

  RegionalWebACL:
    # This regional WAF WebACL is created in all regions
    # It can be used for regional resources like ALBs or API Gateway
    Type: "AWS::WAFv2::WebACL"
    Properties:
      Description: "Regional WAF WebACL for protecting regional resources"
      DefaultAction:
        Allow: {}
      Scope: "REGIONAL"
      VisibilityConfig:
        SampledRequestsEnabled: true
        MetricName: "RegionalWebACL"
        CloudWatchMetricsEnabled: true
      Name: !Sub "RegionalWebACL-${AWS::StackName}"
      Rules:
      - OverrideAction:
          None: {}
        RuleLabels: []
        VisibilityConfig:
          SampledRequestsEnabled: true
          MetricName: "AWS-AWSManagedRulesCommonRuleSet"
          CloudWatchMetricsEnabled: true
        Priority: 0
        Statement:
          ManagedRuleGroupStatement:
            ManagedRuleGroupConfigs: []
            VendorName: "AWS"
            RuleActionOverrides: []
            ExcludedRules: []
            Name: "AWSManagedRulesCommonRuleSet"
        Name: "AWS-AWSManagedRulesCommonRuleSet"
      Tags:
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "business_unit"
          Value: !Ref BusinessUnitTag
        - Key: "environment"
          Value: !Ref EnvironmentTag

Outputs:
  CloudFrontDistributionDomainName:
    Description: "Domain name of the CloudFront distribution"
    Value:
      Fn::GetAtt:
      - "CloudFrontDistribution"
      - "DomainName"
  CloudFrontDistributionId:
    Description: "ID of the CloudFront distribution"
    Value:
      Ref: "CloudFrontDistribution"
  S3BucketName:
    Description: "Name of the S3 bucket hosting the static website content"
    Value:
      Ref: "S3BucketFlatstonesolutionsuseast1"
